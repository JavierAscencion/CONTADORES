static const uint8_t logoAccesa[736] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,
    0x00, 0x78, 0x00, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0x80, 0x1e, 0x00,
    0x00, 0xfc, 0x01, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0x80, 0x1f, 0x00,
    0x00, 0xfc, 0x01, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0x80, 0x3f, 0x00,
    0x00, 0xfc, 0x03, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff, 0x80, 0x3f, 0x00,
    0x01, 0xce, 0x03, 0x80, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x73, 0x80,
    0x01, 0xce, 0x03, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x73, 0x80,
    0x03, 0x87, 0x03, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x61, 0xc0,
    0x03, 0x87, 0x02, 0x00, 0x00, 0x18, 0x00, 0x00, 0x40, 0x00, 0x23, 0xc0, 0x01, 0x00, 0xe1, 0xc0,
    0x03, 0x83, 0x06, 0x00, 0x00, 0x18, 0x00, 0x00, 0x7f, 0xff, 0xe1, 0xff, 0xff, 0x80, 0xe0, 0xe0,
    0x07, 0x03, 0x86, 0x00, 0x00, 0x18, 0x00, 0x00, 0x7f, 0xff, 0xe1, 0xff, 0xff, 0x81, 0xc0, 0xe0,
    0x07, 0x03, 0x86, 0x00, 0x00, 0x18, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0x81, 0xc4, 0x60,
    0x0e, 0x21, 0xc3, 0x00, 0x00, 0x18, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0xc3, 0x8c, 0x70,
    0x0e, 0x31, 0xc3, 0x00, 0x00, 0x18, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0xc3, 0x8e, 0x70,
    0x0c, 0x30, 0xe3, 0x80, 0x00, 0x1c, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x8e, 0x38,
    0x1c, 0x30, 0xe3, 0x80, 0x00, 0x1e, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0xc7, 0x0c, 0x38,
    0x1c, 0x30, 0x63, 0xff, 0xff, 0x0f, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x87, 0x0c, 0x18,
    0x18, 0x30, 0x71, 0xff, 0xff, 0x8f, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x86, 0x00, 0x1c,
    0x18, 0x00, 0x61, 0xff, 0xff, 0x87, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x86, 0x00, 0x1c,
    0x10, 0x00, 0x20, 0xff, 0xff, 0x87, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x04, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

static const uint8_t RSSIexcelente[736] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe1, 0xc0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0xe0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x70,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x70,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1f, 0x38,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x3f, 0x98,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x73, 0x98,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xc0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xe0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x60,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x9f, 0x30,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x3f, 0x30,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xc0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xe0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,
    0x00, 0x78, 0x00, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0x80, 0x1e, 0x00,
    0x00, 0xfc, 0x01, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0x80, 0x1f, 0x00,
    0x00, 0xfc, 0x01, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0x80, 0x3f, 0x00,
    0x00, 0xfc, 0x03, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff, 0x80, 0x3f, 0x00,
    0x01, 0xce, 0x03, 0x80, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x73, 0x80,
    0x01, 0xce, 0x03, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x73, 0x80,
    0x03, 0x87, 0x03, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x61, 0xc0,
    0x03, 0x87, 0x02, 0x00, 0x00, 0x18, 0x00, 0x00, 0x40, 0x00, 0x23, 0xc0, 0x01, 0x00, 0xe1, 0xc0,
    0x03, 0x83, 0x06, 0x00, 0x00, 0x18, 0x00, 0x00, 0x7f, 0xff, 0xe1, 0xff, 0xff, 0x80, 0xe0, 0xe0,
    0x07, 0x03, 0x86, 0x00, 0x00, 0x18, 0x00, 0x00, 0x7f, 0xff, 0xe1, 0xff, 0xff, 0x81, 0xc0, 0xe0,
    0x07, 0x03, 0x86, 0x00, 0x00, 0x18, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0x81, 0xc4, 0x60,
    0x0e, 0x21, 0xc3, 0x00, 0x00, 0x18, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0xc3, 0x8c, 0x70,
    0x0e, 0x31, 0xc3, 0x00, 0x00, 0x18, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0xc3, 0x8e, 0x70,
    0x0c, 0x30, 0xe3, 0x80, 0x00, 0x1c, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x8e, 0x38,
    0x1c, 0x30, 0xe3, 0x80, 0x00, 0x1e, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0xc7, 0x0c, 0x38,
    0x1c, 0x30, 0x63, 0xff, 0xff, 0x0f, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x87, 0x0c, 0x18,
    0x18, 0x30, 0x71, 0xff, 0xff, 0x8f, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x86, 0x00, 0x1c,
    0x18, 0x00, 0x61, 0xff, 0xff, 0x87, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x86, 0x00, 0x1c,
    0x10, 0x00, 0x20, 0xff, 0xff, 0x87, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x04, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

void imprimeRSSI()
{
  display.drawBitmap(0, 0, RSSIexcelente, 128, 46, 1);
  display.display();
  digitalWrite(LED_LINK, HIGH);
}

void imprimeLogo()
{
  display.drawBitmap(0, 0, logoAccesa, 128, 46, 1);
  display.display();
}

void borrarRenglonOled(int direccionHorizontal, int direccionVertical, byte ancho)
{
  for (byte i = 0; i < 8; i++)
  {
    display.drawFastHLine(direccionHorizontal, direccionVertical + i, ancho, 0);
  }
  display.display();
}

void dibujaProgreso(int16_t x, int16_t y, int16_t h, int16_t color)
{
  for (byte i = 0; i < 8; i++)
  {
    display.drawFastHLine(x, y + i, h, color);
  }
  display.display();
}

void dibujaVigenciaVencida()
{
  display.setFont();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(25, 30);
  display.printf("VIG VENCIDA\r\nRENICIANDO...");
  display.display();
}

void dibujaPublicacionExitosa()
{
  display.setFont();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(15, 30);
  display.printf("COMPLETADO!");
  display.display();
  delay(500);
}

void dibujaInicioPublicacion()
{
  display.clearDisplay();
  display.setFont(&FreeSerif9pt7b);
  display.setCursor(1, 1);
  display.setTextSize(1);
  display.println("\r\nPublicando...");
  display.display();
}

void dibujaBorraRenglones()
{
  for (byte i = 0; i < 40; i++)
  {
    display.drawFastHLine(0, 0 + i, 128, 0);
  }
  display.display();
}

void dibujaNumeroSerieVersion()
{
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  // Display static text
  display.printf("ID: %s\r\n%s", numeroSerie.c_str(), versionFirmware.c_str());
  display.display();
}

void borrarIntensidadWiFi()
{
  for (byte i = 0; i < 20; i++)
  {
    display.drawFastVLine(108 + i, 0, 23, 0);
  }
  display.display();
}

void dibujaVigencia(String anio, String mes, String dia)
{
  borrarRenglonOled(0, 46, 128);
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 46);
  // Display static text
  display.printf("Vigencia:%s-%s-%s", anio.c_str(), mes.c_str(), dia.c_str());
  display.display();
}

void dibujaVigenciaEEPROM()
{
  char axoVigencia[5] = {0};
  for (byte i = 0; i < 4; i++)
  {
    axoVigencia[i] = EEPROM.read(150 + i);
  }
  String axoVi = String(axoVigencia);
  String mesVigencia = String(EEPROM.read(155));
  String diaVigencia = String(EEPROM.read(156));
  dibujaVigencia(axoVi, mesVigencia, diaVigencia);
}

void dibujaEstadoServicio(int estado)
{
  borrarRenglonOled(0, 53, 128);
  if (estado)
  {
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 46);
    display.printf("\r\nServicio: Activo");
    display.display();
  }
  else
  {
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 46);
    display.printf("\r\nServicio: Suspendido");
    display.display();
  }
}

void DibujaEstadoHTTPRequest(bool estado)
{
  for (byte i = 0; i < 10; i++)
  {
    display.drawFastHLine(0, 15 + i, 128, 0);
  }
  display.display();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  if (estado)
  {
    display.printf("\r\n\r\nSolicitud correcta");
  }
  else
  {
    display.printf("\r\n\r\nSolicitud fallo ");
  }
  display.display();
}
